% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compress_paf.R, R/fasta_extraction_functions.R,
%   R/seqbuilder_functions.R, R/tsv_to_bitlocus.R
\name{merge_rows}
\alias{merge_rows}
\alias{merge_paf_entries_intraloop}
\alias{compress_paf_fnct}
\alias{extract_subseq}
\alias{filter_paf_to_main_region}
\alias{extract_subseq_bedtools}
\alias{make_chunked_minimap_alnment}
\alias{shred_seq}
\alias{run_minimap2}
\alias{awk_edit_paf}
\alias{writeFasta}
\alias{shorten_fasta}
\alias{find_x_intersection}
\alias{find_y_intersection}
\alias{add_slope_intercept_info}
\alias{get_gridlines_x}
\alias{get_gridlines_y}
\alias{wrapper_paf_to_bitlocus}
\alias{get_aln_overlap_in_sector}
\title{Helperfunction (1/1) of compress_paf_fnct}
\usage{
merge_rows(paffile, nl1, nl2)

merge_paf_entries_intraloop(inpaf)

compress_paf_fnct(inpaf_link, outpaf_link, quadrantsize = 1e+05)

extract_subseq(infasta, seqname, start, end, outfasta)

filter_paf_to_main_region(paflink, outpaflink)

extract_subseq_bedtools(infasta, seqname, start, end, outfasta)

make_chunked_minimap_alnment(
  targetfasta,
  queryfasta,
  outpaf,
  chunklen = 1000,
  keep_ref = 10000,
  minsdlen = 2000,
  plot_size = 10,
  saveplot = T,
  savepaf = T,
  quadrantsize = 1e+05,
  hllink = F,
  hltype = F,
  targetrange = NULL,
  queryrange = NULL,
  wholegenome = F
)

shred_seq(
  infasta,
  outfasta_chunk,
  chunklen,
  scriptloc = "/Users/hoeps/PhD/projects/nahrcall/bbmap/shred.sh"
)

run_minimap2(
  targetfasta,
  queryfasta,
  outpaf,
  minimap2loc = "/Users/hoeps/opt/anaconda3/bin/minimap2",
  nthreads = 4
)

awk_edit_paf(
  inpaf,
  outpaf,
 
    scriptlink = "/Users/hoeps/PhD/projects/nahrcall/nahrchainer/seqbuilder/scripts/awk_on_paf.sh"
)

writeFasta(data, filename)

shorten_fasta(infasta, outfasta, range)

find_x_intersection(vectors, point)

find_y_intersection(vectors, point)

add_slope_intercept_info(
  vector_df,
  xstart = "tstart",
  xend = "tend",
  ystart = "qstart",
  yend = "qend"
)

get_gridlines_x(paf, gp = 10)

get_gridlines_y(paf, gp = 10)

wrapper_paf_to_bitlocus(
  inpaf,
  realplot = T,
  bitlocusplot = T,
  minlen = 2000,
  gp = 10
)

get_aln_overlap_in_sector(
  paf,
  x_start,
  y_start,
  x_mid,
  y_mid,
  x_end,
  y_end,
  gp = 10
)
}
\arguments{
\item{paffile}{\link{data frame} loaded paffile with colnames}

\item{nl1}{\link{character/link} line number of first-of-pair}

\item{nl2}{\link{character/link} line number of second-of-pair}

\item{inpaf}{\link{character/link} input paf}

\item{inpaf_link}{\link{character/link} link to the chunked paf}

\item{outpaf_link}{\link{character/link} link to the molten output paf}

\item{infasta}{\link{character/link} single-seq fasta to be chopped}

\item{targetfasta}{\link{character/link} link to the 'target' single-sequence fasta (sometimes reference, e.g. chm13.)}

\item{queryfasta}{\link{character/link} link to the 'query' fasta. Can be single or multi-fasta}

\item{outpaf}{\link{character/link} output paf}

\item{chunklen}{\link{numeric} length of sequence chunks in bp}

\item{keep_ref}{\link{numeric} Number of alignments to keep or something. Plotting parameter.}

\item{plot_size}{\link{numeric} Plot size in inch.}

\item{hllink}{\link{character/link} link to an SD annotation file (bed, tsv or paf) to include as
highlights in the plot.}

\item{hltype}{\link{character} filetype of hllink. Can be 'NULL', 'bed', 'tsv', 'paf'.}

\item{outfasta_chunk}{\link{character/link} output chopped multi-seq fasta.}

\item{scriptloc}{\link{character/link} link to shred.ss from bbmap.}

\item{minimap2loc}{\link{character/link} link to minimap2 binary.}

\item{data}{\link{character/link} data frame with column 'name' and 'seq'}

\item{filename}{\link{character/link} output filename.}

\item{outplot}{\link{character/link} Path to the output plot to be written.}

\item{outsd}{\link{character/link} Outputfile for the modified SD tsv file.}
}
\value{
paffile with one row less (bc a pair has been merged)

nothing. But output files written.

nothing. But output files written.

nothing. Only output files written.

nothing. Only output files written.

nothing. Only output files written.

nothing. Only output files written.
}
\description{
Melt two alignment entries into one.

This is a crucial module for finding the SDs later, and poses
the last part of the chunk-minimap2-edit-melt workflow. This might need more
work in the future, because melting is not so straight forward.

Is awfully slow unfortunately. We should find a way to only read
the chromosome of interest.

A core function. Give me a fasta with a sequence of interest (e.g. from hg38),
and give me an assembly fasta, and I will return the fasta of a corresponding
sequence in the assembly. sas

This is sitting at the core of the nahrchainer module. It ties
together core modules, such as query-sequence chunking, minimap2 alignment,
paf recombination and plotting. s

This is a helperfunction calling an external script to
chop a query sequence into chunks.

This is a helperfunction to run minimap2. Also check out:
https://github.com/PacificBiosciences/pbmm2/ . Minimap2 parameters:
-k   k-mer size (no larger than 28). \link{-1}
-w   Minimizer window size. \link{-1}
-u   Disable homopolymer-compressed k-mer (compression is active for SUBREAD & UNROLLED presets).
-A   Matching score. \link{-1}
-B   Mismatch penalty. \link{-1}
-z   Z-drop score. \link{-1}
-Z   Z-drop inversion score. \link{-1}
-r   Bandwidth used in chaining and DP-based alignment. \link{-1}
-g   Stop chain enlongation if there are no minimizers in N bp. \link{-1}
#'

This is a helperfunction to run awk

a simple function that takes a data.frame that has a column name
and seq and writes a fasta file from it. Taken from
https://bootstrappers.umassmed.edu/guides/main/r_writeFasta.html.
}
\author{
Wolfram Höps

Wolfram Höps

Wolfram Höps

Wolfram Hoeps

Wolfram Höps

Wolfram Hoeps

Wolfram Hoeps

Wolfram Höps

Wolfram Höps

Wolfram Höps

Wolfram Höps

Nicholas Hathaway

Nicholas Hathaway

Wolfram Hoeps

Wolfram Hoeps

Wolfram Hoeps

Wolfram Hoeps

Wolfram Hoeps

Wolfram Hoeps

Wolfram Hoeps
}
