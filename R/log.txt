commit 48c67780d97942a713bb46a1f806a5b6bcedc999
Merge: d6d148a a8cab04
Author: whops <wolfram.hoeps@yahoo.de>
Date:   Tue Apr 5 12:40:12 2022 +0200

    merge

commit d6d148a9f322c8f899705506e1001a6ba9f125a0
Author: whops <wolfram.hoeps@yahoo.de>
Date:   Tue Apr 5 12:39:10 2022 +0200

    prepping merge

diff --git a/R/wrapper_aln_and_analyse.R b/R/wrapper_aln_and_analyse.R
index 156ae18..1bc63c8 100644
--- a/R/wrapper_aln_and_analyse.R
+++ b/R/wrapper_aln_and_analyse.R
@@ -87,12 +87,15 @@ wrapper_aln_and_analyse <- function(seqname_x,
   genome_x_fa_subseq = paste0(sequence_name_output, '/fasta/', samplename, '_x.fa')
   genome_y_fa_subseq = paste0(sequence_name_output, '/fasta/', samplename, '_y.fa')
   
-  # Pad-sequence
-  start_end_pad = enlarge_interval_by_factor(start_x, end_x, xpad, seqname_f = seqname_x, conversionpaf_f = conversionpaf_link) 
-  start_x_pad = start_end_pad[1]
-  end_x_pad = start_end_pad[2]
+
 
   if (use_paf_library){
+    
+    # Pad-sequence
+    start_end_pad = enlarge_interval_by_factor(start_x, end_x, xpad, seqname_f = seqname_x, conversionpaf_f = conversionpaf_link) 
+    start_x_pad = start_end_pad[1]
+    end_x_pad = start_end_pad[2]
+    
     # Get coordinates in y
     coords_liftover = liftover_coarse(seqname_x, start_x_pad, end_x_pad, conversionpaf_link, lenfactor = aln_pad_factor)
   
@@ -100,6 +103,11 @@ wrapper_aln_and_analyse <- function(seqname_x,
     extract_subseq_bedtools(genome_x_fa, seqname_x, start_x_pad, end_x_pad, genome_x_fa_subseq)
     extract_subseq_bedtools(genome_y_fa, coords_liftover$lift_contig, coords_liftover$lift_start, coords_liftover$lift_end, genome_y_fa_subseq)
   } else {
+    
+    start_x_pad = 0
+    end_x_pad = 1
+    start_x = 0
+    end_x = 1
     system(paste0('cp ', genome_x_fa, ' ', genome_x_fa_subseq))
     system(paste0('cp ', genome_y_fa, ' ', genome_y_fa_subseq))
     

commit 148ee624deaf459594ad3887820aa0b2ab527559
Author: Wolfram Hoeps <wolfram.hoeps@embl.de>
Date:   Thu Mar 24 11:36:03 2022 +0100

    Committing seneca small changes, prepping marge

diff --git a/R/wrapper_aln_and_analyse.R b/R/wrapper_aln_and_analyse.R
index 5ea6f28..d8b2095 100644
--- a/R/wrapper_aln_and_analyse.R
+++ b/R/wrapper_aln_and_analyse.R
@@ -113,7 +113,8 @@ wrapper_aln_and_analyse <- function(seqname_x,
                   dpi = 300)
 
 
-
+  system(paste0('rm ', genome_x_fa_subseq))
+  system(paste0('rm ', genome_y_fa_subseq))
   
   
 }

commit 87acc8c60fae8fd9d1b967953d0bc35ddb48a46d
Author: whops <wolfram.hoeps@yahoo.de>
Date:   Wed Mar 23 17:39:12 2022 +0100

    Main function is now documented

diff --git a/R/wrapper_aln_and_analyse.R b/R/wrapper_aln_and_analyse.R
index 5feda10..156ae18 100644
--- a/R/wrapper_aln_and_analyse.R
+++ b/R/wrapper_aln_and_analyse.R
@@ -1,8 +1,33 @@
 
 
 #' wrapper_aln_and_analyse
-#' Description ... 
-#' @param samplename should be a string of length 1
+#' @description The main wrapper function for running nahrtoolkit. 
+#' This is where all the information flow together. 
+#' @param seqname_x region of interest on ref: seqname [character]
+#' @param start_x region of interest on ref: start coord [numeric]
+#' @param end_x region of interest on ref: end coord [numeric]
+#' @param genome_x_fa link to genome assembly fasta file serving as 'reference' (Typically hg38) [character/link]
+#' @param genome_y_fa link to fasta file serving as 'query'. Typically a genome assembly [character/link]
+#' @param conversionpaf_link link to paf containing a genome-wide alignment between genome_x_fa and genome_y_fa [character/link]
+#' @param logfile link to output 'log'-file [character/link]
+#' @param chunklen Length of sequence chunks used in fine alignment. Typically between 100 and 50k. Increase chunklen for faster runtime, sacrificing fine alignment details. [numeric]
+#' @param sd_minlen Auto SD-detection: shortest alignment to consider for SD detection. Typically same number as compression parameter. [numeric]
+#' @param compression Auto SD-detection: Round SD locations by maximum this number of basepairs. Typically same as sd_minlen. Should be magnitudes smaller than event size. [numeric]
+#' @param depth Maximum number of chained mutations to model. Current maximum is 3. Has a big impact on runtime. [numeric]
+#' @param xpad enlarge input sequence by a factor. e.g. region chr1:1000-2000 will turn to 500 - 2500 with xpad=2 (region is twice as large afterwards.) [numeric]
+#' @param samplename Name of the sample/run. Used in the output filenames. [character]
+#' @param include_grid T/F: do you want to auto-detect SDs and model mutations? [bool; T/F]
+#' @param debug debug mode used for developing (default: F) [bool; T/F]
+#' @param use_paf_library T/F: If this is off, input region is ignored, and alignment is computed on entire x vs y sequence. Use this if your input fastas contain only the region of interest. (default: F) [bool; T/F]
+#' @param aln_pad_factor Factor to enlarge the query sequence by a factor. [numeric]
+#' @examples 
+#' 
+#' Extract region chr1:500k-600k in hg38, find the respective region in the assembly, 
+#' make an alignment and print the results to res/chr1-500000-6000000/
+#' wrapper_aln_and_analyse('chr1', 500000, 600000, 'my/genomes/hg38.fa', 'my/assembly.fa', 
+#'                         'my/conversionpaf.fa', samplename='testsample', 
+#'                         chunklen = 1000, sd_minlen = 100, compression = 100, 
+#'                         depth = 2, xpad = 1.2)
 #' @export
 wrapper_aln_and_analyse <- function(seqname_x,
                                     start_x,
@@ -32,12 +57,6 @@ wrapper_aln_and_analyse <- function(seqname_x,
   
   
 
-  # Log file entry done #
-  
-  # if (exists('log_collection')){
-  #   log_collection$x <<- variable
-  # }
-  
   sequence_name_output = paste(paste0('res/',seqname_x), format(start_x, scientific = F),  format(end_x, scientific = F), sep='-')
   dir.create('res')
   dir.create(sequence_name_output)
@@ -51,13 +70,13 @@ wrapper_aln_and_analyse <- function(seqname_x,
   dir.create(paste0(sequence_name_output, '/fasta'))
   
   # Define output files
-  outpaf_link_self_x =  paste0(sequence_name_output, '/self/paf/', samplename, '_x.paf')
+  outpaf_link_self_x =  paste0(sequence_name_output, '/self/paf/aln_ref.paf')
   outpaf_link_self_y =  paste0(sequence_name_output, '/self/paf/', samplename, '_y.paf')
   outpaf_link_x_y =     paste0(sequence_name_output, '/diff/paf/', samplename, '_xy.paf')
   
   res_table_xy =        paste0(sequence_name_output, '/diff/', samplename, '_res.tsv')
   
-  outfile_plot_self_x = paste0(sequence_name_output, '/self/pdf/', samplename, '_x.pdf')
+  outfile_plot_self_x = paste0(sequence_name_output, '/self/pdf/aln_ref.pdf')
   outfile_plot_self_y = paste0(sequence_name_output, '/self/pdf/', samplename, '_y.pdf')
   outfile_plot_x_y =    paste0(sequence_name_output, '/diff/pdf/', samplename, '_x_y.pdf')
   
@@ -86,25 +105,32 @@ wrapper_aln_and_analyse <- function(seqname_x,
     
   }
   # Run alignments. 
-  plot_self_x = make_chunked_minimap_alnment(genome_x_fa_subseq, genome_x_fa_subseq, outpaf_link_self_x,
-                                             chunklen = chunklen, minsdlen = 2000, saveplot=F,
-                                             hllink = F, hltype = F, hlstart = start_x - start_x_pad, hlend = end_x - start_x_pad)
+  # Run REF self alignment only if it hasn't been run before. 
+  if (is.na(file.size(outfile_plot_self_x))){
+    plot_self_x = make_chunked_minimap_alnment(genome_x_fa_subseq, genome_x_fa_subseq, outpaf_link_self_x,
+                                               chunklen = chunklen, minsdlen = 2000, saveplot=F,
+                                               hllink = F, hltype = F, hlstart = start_x - start_x_pad, hlend = end_x - start_x_pad)
+    
+    # Save alignment
+    ggplot2::ggsave(filename = outfile_plot_self_x,
+                    plot = plot_self_x, 
+                    width = 20, 
+                    height = 20, 
+                    units = 'cm',
+                    dpi = 300)
+  }
   
+  # Run y self alignment
   plot_self_y = make_chunked_minimap_alnment(genome_y_fa_subseq, genome_y_fa_subseq, outpaf_link_self_y,
                                              chunklen = chunklen, minsdlen = 2000, saveplot=F,
                                              hllink = F, hltype = F, hlstart = start_x - start_x_pad, hlend = end_x - start_x_pad)
   
+  # Run xy alignment
   plot_x_y = make_chunked_minimap_alnment(genome_x_fa_subseq, genome_y_fa_subseq, outpaf_link_x_y,
                                              chunklen = chunklen, minsdlen = 2000, saveplot=F,
                                              hllink = F, hltype = F, hlstart = start_x - start_x_pad, hlend = end_x - start_x_pad)
   
-  # Save orig alignments
-  ggplot2::ggsave(filename = outfile_plot_self_x,
-                  plot = plot_self_x, 
-                  width = 20, 
-                  height = 20, 
-                  units = 'cm',
-                  dpi = 300)
+  # Save alignments
   ggplot2::ggsave(filename = outfile_plot_self_y,
                   plot = plot_self_y, 
                   width = 20, 

commit ba660783ecec77f9a6de7eb44ded2c6b214bcdac
Author: whops <wolfram.hoeps@yahoo.de>
Date:   Mon Mar 14 18:58:21 2022 +0100

    More heuristics, bugs fixed, ...

diff --git a/R/wrapper_aln_and_analyse.R b/R/wrapper_aln_and_analyse.R
index 0818790..5feda10 100644
--- a/R/wrapper_aln_and_analyse.R
+++ b/R/wrapper_aln_and_analyse.R
@@ -12,14 +12,15 @@ wrapper_aln_and_analyse <- function(seqname_x,
                                     conversionpaf_link,
                                     logfile,
                                     chunklen = 1000,
-                                    aln_pad_factor = 1.1,
+                                    aln_pad_factor = 1.0,
                                     sd_minlen = 1000,
                                     compression = 1000,
                                     depth = 2,
                                     samplename = 'test',
                                     include_grid = T,
                                     xpad = 1,
-                                    debug = F){
+                                    debug = F,
+                                    use_paf_library = T){
   
   if (debug){
     print('Debug mode!')
@@ -72,13 +73,18 @@ wrapper_aln_and_analyse <- function(seqname_x,
   start_x_pad = start_end_pad[1]
   end_x_pad = start_end_pad[2]
 
-  # Get coordinates in y
-  coords_liftover = liftover_coarse(seqname_x, start_x_pad, end_x_pad, conversionpaf_link, lenfactor = aln_pad_factor)
-  
-  # Get subseq-fastas in x and y
-  extract_subseq_bedtools(genome_x_fa, seqname_x, start_x_pad, end_x_pad, genome_x_fa_subseq)
-  extract_subseq_bedtools(genome_y_fa, coords_liftover$lift_contig, coords_liftover$lift_start, coords_liftover$lift_end, genome_y_fa_subseq)
-  
+  if (use_paf_library){
+    # Get coordinates in y
+    coords_liftover = liftover_coarse(seqname_x, start_x_pad, end_x_pad, conversionpaf_link, lenfactor = aln_pad_factor)
+  
+    # Get subseq-fastas in x and y
+    extract_subseq_bedtools(genome_x_fa, seqname_x, start_x_pad, end_x_pad, genome_x_fa_subseq)
+    extract_subseq_bedtools(genome_y_fa, coords_liftover$lift_contig, coords_liftover$lift_start, coords_liftover$lift_end, genome_y_fa_subseq)
+  } else {
+    system(paste0('cp ', genome_x_fa, ' ', genome_x_fa_subseq))
+    system(paste0('cp ', genome_y_fa, ' ', genome_y_fa_subseq))
+    
+  }
   # Run alignments. 
   plot_self_x = make_chunked_minimap_alnment(genome_x_fa_subseq, genome_x_fa_subseq, outpaf_link_self_x,
                                              chunklen = chunklen, minsdlen = 2000, saveplot=F,

commit 8e8dcee3414a68947103e2bd150f7a80753138ff
Author: celiatsapalou <celiatsapalou@gmail.com>
Date:   Fri Mar 11 16:15:48 2022 +0100

    jjj

diff --git a/R/wrapper_aln_and_analyse.R b/R/wrapper_aln_and_analyse.R
index 5e4c211..0818790 100644
--- a/R/wrapper_aln_and_analyse.R
+++ b/R/wrapper_aln_and_analyse.R
@@ -26,8 +26,8 @@ wrapper_aln_and_analyse <- function(seqname_x,
     browser()
   }
   log_collection <<- init_log_with_def_values()
-  log_collection[c('chr', 'start', 'end', 'xpad', 'chunklen', 'runname', 'depth')] <<-
-    c(seqname_x, start_x, end_x, xpad, chunklen, runname, depth)
+  log_collection[c('chr', 'start', 'end', 'xpad', 'chunklen', 'samplename', 'depth')] <<-
+    c(seqname_x, start_x, end_x, xpad, chunklen, samplename, depth)
   
   
 

commit d0a504c0025aa444e195f9971a4333c5f5146fc7
Merge: 53c1437 5b5e23e
Author: whops <wolfram.hoeps@yahoo.de>
Date:   Fri Mar 11 15:47:03 2022 +0100

    Merge branch 'main' of https://github.com/WHops/nahrchainer

commit 53c1437212d68b5b3507a9e1f9074fc4f098be8b
Author: whops <wolfram.hoeps@yahoo.de>
Date:   Fri Mar 11 15:46:42 2022 +0100

    Prepping wrapper for merge

diff --git a/R/wrapper_aln_and_analyse.R b/R/wrapper_aln_and_analyse.R
index b6e4ca7..caf25c6 100644
--- a/R/wrapper_aln_and_analyse.R
+++ b/R/wrapper_aln_and_analyse.R
@@ -9,15 +9,32 @@ wrapper_aln_and_analyse <- function(seqname_x,
                                     genome_x_fa,
                                     genome_y_fa,
                                     conversionpaf_link,
+                                    logfile,
                                     chunklen = 1000,
-                                    aln_pad_factor = 1.5,
+                                    aln_pad_factor = 1.1,
                                     sd_minlen = 1000,
                                     compression = 1000,
                                     depth = 2,
                                     runname = 'test',
                                     include_grid = T,
-                                    xpad = 1){
+                                    xpad = 1,
+                                    debug = F){
   
+  if (debug){
+    print('Debug mode!')
+    browser()
+  }
+  log_collection <<- init_log_with_def_values()
+  log_collection[c('chr', 'start', 'end', 'xpad', 'chunklen', 'runname', 'depth')] <<-
+    c(seqname_x, start_x, end_x, xpad, chunklen, runname, depth)
+  
+  
+
+  # Log file entry done #
+  
+  # if (exists('log_collection')){
+  #   log_collection$x <<- variable
+  # }
   
   sequence_name_output = paste(paste0('res/',seqname_x), format(start_x, scientific = F),  format(end_x, scientific = F), sep='-')
   dir.create('res')
@@ -99,7 +116,6 @@ wrapper_aln_and_analyse <- function(seqname_x,
     grid_xy = wrapper_paf_to_bitlocus(outpaf_link_x_y, minlen = sd_minlen, compression = compression,
                                       gridplot_save = outfile_plot_grid, pregridplot_save = outfile_plot_pre_grid )
     gridmatrix = gridlist_to_gridmatrix(grid_xy)
-    
     res = explore_mutation_space(gridmatrix, depth = depth)
 
     # Make a grid after applying the top res
@@ -123,9 +139,12 @@ wrapper_aln_and_analyse <- function(seqname_x,
     )
   }
 
-
+  save_to_logfile(get('log_collection', envir=globalenv()), res, logfile)
   system(paste0('rm ', genome_y_fa_subseq))
 
   
   
 }
+
+
+

commit 5b5e23ef0073bfb8dcdc08035ed438d8779afe52
Author: celiatsapalou <celiatsapalou@gmail.com>
Date:   Fri Mar 11 15:44:23 2022 +0100

    modified filename

diff --git a/R/wrapper_aln_and_analyse.R b/R/wrapper_aln_and_analyse.R
index b6e4ca7..dd84235 100644
--- a/R/wrapper_aln_and_analyse.R
+++ b/R/wrapper_aln_and_analyse.R
@@ -2,6 +2,7 @@
 
 #' wrapper_aln_and_analyse
 #' Description ... 
+#' @param samplename should be a string of length 1
 #' @export
 wrapper_aln_and_analyse <- function(seqname_x,
                                     start_x,
@@ -14,7 +15,7 @@ wrapper_aln_and_analyse <- function(seqname_x,
                                     sd_minlen = 1000,
                                     compression = 1000,
                                     depth = 2,
-                                    runname = 'test',
+                                    samplename = 'test',
                                     include_grid = T,
                                     xpad = 1){
   
@@ -32,22 +33,22 @@ wrapper_aln_and_analyse <- function(seqname_x,
   dir.create(paste0(sequence_name_output, '/fasta'))
   
   # Define output files
-  outpaf_link_self_x =  paste0(sequence_name_output, '/self/paf/', runname, '_x.paf')
-  outpaf_link_self_y =  paste0(sequence_name_output, '/self/paf/', runname, '_y.paf')
-  outpaf_link_x_y =     paste0(sequence_name_output, '/diff/paf/', runname, '_xy.paf')
+  outpaf_link_self_x =  paste0(sequence_name_output, '/self/paf/', samplename, '_x.paf')
+  outpaf_link_self_y =  paste0(sequence_name_output, '/self/paf/', samplename, '_y.paf')
+  outpaf_link_x_y =     paste0(sequence_name_output, '/diff/paf/', samplename, '_xy.paf')
   
-  res_table_xy =        paste0(sequence_name_output, '/diff/', runname, '_res.tsv')
+  res_table_xy =        paste0(sequence_name_output, '/diff/', samplename, '_res.tsv')
   
-  outfile_plot_self_x = paste0(sequence_name_output, '/self/pdf/', runname, '_x.pdf')
-  outfile_plot_self_y = paste0(sequence_name_output, '/self/pdf/', runname, '_y.pdf')
-  outfile_plot_x_y =    paste0(sequence_name_output, '/diff/pdf/', runname, '_x_y.pdf')
+  outfile_plot_self_x = paste0(sequence_name_output, '/self/pdf/', samplename, '_x.pdf')
+  outfile_plot_self_y = paste0(sequence_name_output, '/self/pdf/', samplename, '_y.pdf')
+  outfile_plot_x_y =    paste0(sequence_name_output, '/diff/pdf/', samplename, '_x_y.pdf')
   
-  outfile_plot_pre_grid = paste0(sequence_name_output, '/diff/pdf/grid/', runname, '_x_y_grid_pre.pdf')
-  outfile_plot_grid =     paste0(sequence_name_output, '/diff/pdf/grid/', runname, '_x_y_grid.pdf')
-  outfile_plot_grid_mut = paste0(sequence_name_output, '/diff/pdf/grid/', runname, '_x_y_grid_mut.pdf')
+  outfile_plot_pre_grid = paste0(sequence_name_output, '/diff/pdf/grid/', samplename, '_x_y_grid_pre.pdf')
+  outfile_plot_grid =     paste0(sequence_name_output, '/diff/pdf/grid/', samplename, '_x_y_grid.pdf')
+  outfile_plot_grid_mut = paste0(sequence_name_output, '/diff/pdf/grid/', samplename, '_x_y_grid_mut.pdf')
   
-  genome_x_fa_subseq = paste0(sequence_name_output, '/fasta/', runname, '_x.fa')
-  genome_y_fa_subseq = paste0(sequence_name_output, '/fasta/', runname, '_y.fa')
+  genome_x_fa_subseq = paste0(sequence_name_output, '/fasta/', samplename, '_x.fa')
+  genome_y_fa_subseq = paste0(sequence_name_output, '/fasta/', samplename, '_y.fa')
   
   # Pad-sequence
   start_end_pad = enlarge_interval_by_factor(start_x, end_x, xpad, seqname_f = seqname_x, conversionpaf_f = conversionpaf_link) 

commit 4c91645869507145cbb74ea741b79b70e14733c6
Author: whops <wolfram.hoeps@yahoo.de>
Date:   Thu Mar 10 13:21:12 2022 +0100

    Fixed cases with very small grids

diff --git a/R/wrapper_aln_and_analyse.R b/R/wrapper_aln_and_analyse.R
index 2aa5407..b6e4ca7 100644
--- a/R/wrapper_aln_and_analyse.R
+++ b/R/wrapper_aln_and_analyse.R
@@ -98,7 +98,6 @@ wrapper_aln_and_analyse <- function(seqname_x,
     # Make an xy grid
     grid_xy = wrapper_paf_to_bitlocus(outpaf_link_x_y, minlen = sd_minlen, compression = compression,
                                       gridplot_save = outfile_plot_grid, pregridplot_save = outfile_plot_pre_grid )
-    browser()
     gridmatrix = gridlist_to_gridmatrix(grid_xy)
     
     res = explore_mutation_space(gridmatrix, depth = depth)

commit 287e1caee500a70a51f10adb027a16cb80226a0a
Author: whops <wolfram.hoeps@yahoo.de>
Date:   Thu Mar 10 10:38:33 2022 +0100

    Cleaned 2 or 3 workflow-breaking bugs.

diff --git a/R/wrapper_aln_and_analyse.R b/R/wrapper_aln_and_analyse.R
index b74e69c..2aa5407 100644
--- a/R/wrapper_aln_and_analyse.R
+++ b/R/wrapper_aln_and_analyse.R
@@ -10,7 +10,7 @@ wrapper_aln_and_analyse <- function(seqname_x,
                                     genome_y_fa,
                                     conversionpaf_link,
                                     chunklen = 1000,
-                                    aln_pad_factor = 1,
+                                    aln_pad_factor = 1.5,
                                     sd_minlen = 1000,
                                     compression = 1000,
                                     depth = 2,
@@ -53,7 +53,7 @@ wrapper_aln_and_analyse <- function(seqname_x,
   start_end_pad = enlarge_interval_by_factor(start_x, end_x, xpad, seqname_f = seqname_x, conversionpaf_f = conversionpaf_link) 
   start_x_pad = start_end_pad[1]
   end_x_pad = start_end_pad[2]
-  browser()
+
   # Get coordinates in y
   coords_liftover = liftover_coarse(seqname_x, start_x_pad, end_x_pad, conversionpaf_link, lenfactor = aln_pad_factor)
   
@@ -98,6 +98,7 @@ wrapper_aln_and_analyse <- function(seqname_x,
     # Make an xy grid
     grid_xy = wrapper_paf_to_bitlocus(outpaf_link_x_y, minlen = sd_minlen, compression = compression,
                                       gridplot_save = outfile_plot_grid, pregridplot_save = outfile_plot_pre_grid )
+    browser()
     gridmatrix = gridlist_to_gridmatrix(grid_xy)
     
     res = explore_mutation_space(gridmatrix, depth = depth)

commit f63edc4c6e7e42f175e164db0dbefba438bdc365
Author: whops <wolfram.hoeps@yahoo.de>
Date:   Wed Mar 9 19:08:55 2022 +0100

    Fixed many bugs, added binsize to gridplots

diff --git a/R/wrapper_aln_and_analyse.R b/R/wrapper_aln_and_analyse.R
index 13af5f7..b74e69c 100644
--- a/R/wrapper_aln_and_analyse.R
+++ b/R/wrapper_aln_and_analyse.R
@@ -10,13 +10,14 @@ wrapper_aln_and_analyse <- function(seqname_x,
                                     genome_y_fa,
                                     conversionpaf_link,
                                     chunklen = 1000,
-                                    factor = 1,
+                                    aln_pad_factor = 1,
                                     sd_minlen = 1000,
                                     compression = 1000,
                                     depth = 2,
                                     runname = 'test',
-                                    include_grid = T
-                                    ){
+                                    include_grid = T,
+                                    xpad = 1){
+  
   
   sequence_name_output = paste(paste0('res/',seqname_x), format(start_x, scientific = F),  format(end_x, scientific = F), sep='-')
   dir.create('res')
@@ -29,6 +30,7 @@ wrapper_aln_and_analyse <- function(seqname_x,
   dir.create(paste0(sequence_name_output, '/diff/pdf/grid'))
   dir.create(paste0(sequence_name_output, '/diff/paf'))
   dir.create(paste0(sequence_name_output, '/fasta'))
+  
   # Define output files
   outpaf_link_self_x =  paste0(sequence_name_output, '/self/paf/', runname, '_x.paf')
   outpaf_link_self_y =  paste0(sequence_name_output, '/self/paf/', runname, '_y.paf')
@@ -41,32 +43,36 @@ wrapper_aln_and_analyse <- function(seqname_x,
   outfile_plot_x_y =    paste0(sequence_name_output, '/diff/pdf/', runname, '_x_y.pdf')
   
   outfile_plot_pre_grid = paste0(sequence_name_output, '/diff/pdf/grid/', runname, '_x_y_grid_pre.pdf')
-  outfile_plot_grid =   paste0(sequence_name_output, '/diff/pdf/grid/', runname, '_x_y_grid.pdf')
-  outfile_plot_grid_mut =   paste0(sequence_name_output, '/diff/pdf/grid/', runname, '_x_y_grid_mut.pdf')
+  outfile_plot_grid =     paste0(sequence_name_output, '/diff/pdf/grid/', runname, '_x_y_grid.pdf')
+  outfile_plot_grid_mut = paste0(sequence_name_output, '/diff/pdf/grid/', runname, '_x_y_grid_mut.pdf')
   
   genome_x_fa_subseq = paste0(sequence_name_output, '/fasta/', runname, '_x.fa')
   genome_y_fa_subseq = paste0(sequence_name_output, '/fasta/', runname, '_y.fa')
   
+  # Pad-sequence
+  start_end_pad = enlarge_interval_by_factor(start_x, end_x, xpad, seqname_f = seqname_x, conversionpaf_f = conversionpaf_link) 
+  start_x_pad = start_end_pad[1]
+  end_x_pad = start_end_pad[2]
+  browser()
   # Get coordinates in y
-  coords_liftover = liftover_coarse(seqname_x, start_x, end_x, conversionpaf_link, lenfactor = factor)
+  coords_liftover = liftover_coarse(seqname_x, start_x_pad, end_x_pad, conversionpaf_link, lenfactor = aln_pad_factor)
   
   # Get subseq-fastas in x and y
-  extract_subseq_bedtools(genome_x_fa, seqname_x, start_x, end_x, genome_x_fa_subseq)
-  
+  extract_subseq_bedtools(genome_x_fa, seqname_x, start_x_pad, end_x_pad, genome_x_fa_subseq)
   extract_subseq_bedtools(genome_y_fa, coords_liftover$lift_contig, coords_liftover$lift_start, coords_liftover$lift_end, genome_y_fa_subseq)
   
   # Run alignments. 
   plot_self_x = make_chunked_minimap_alnment(genome_x_fa_subseq, genome_x_fa_subseq, outpaf_link_self_x,
                                              chunklen = chunklen, minsdlen = 2000, saveplot=F,
-                                             hllink = F, hltype = F)
+                                             hllink = F, hltype = F, hlstart = start_x - start_x_pad, hlend = end_x - start_x_pad)
   
   plot_self_y = make_chunked_minimap_alnment(genome_y_fa_subseq, genome_y_fa_subseq, outpaf_link_self_y,
                                              chunklen = chunklen, minsdlen = 2000, saveplot=F,
-                                             hllink = F, hltype = F)
+                                             hllink = F, hltype = F, hlstart = start_x - start_x_pad, hlend = end_x - start_x_pad)
   
   plot_x_y = make_chunked_minimap_alnment(genome_x_fa_subseq, genome_y_fa_subseq, outpaf_link_x_y,
                                              chunklen = chunklen, minsdlen = 2000, saveplot=F,
-                                             hllink = F, hltype = F)
+                                             hllink = F, hltype = F, hlstart = start_x - start_x_pad, hlend = end_x - start_x_pad)
   
   # Save orig alignments
   ggplot2::ggsave(filename = outfile_plot_self_x,
@@ -95,8 +101,7 @@ wrapper_aln_and_analyse <- function(seqname_x,
     gridmatrix = gridlist_to_gridmatrix(grid_xy)
     
     res = explore_mutation_space(gridmatrix, depth = depth)
-    res = res[!is.na(res$eval),]
-    res = res[order(res$eval, decreasing=T),]
+
     # Make a grid after applying the top res
     grid_modified = modify_gridmatrix(gridmatrix, res[1,])
     gm2 = reshape2::melt(grid_modified)

commit 0fd31d340702705c3d4233ef4029079f37589b5c
Author: whops <wolfram.hoeps@yahoo.de>
Date:   Wed Mar 9 13:06:27 2022 +0100

    Improved error messages and exception handling in a few cases.

diff --git a/R/wrapper_aln_and_analyse.R b/R/wrapper_aln_and_analyse.R
index 8f09390..13af5f7 100644
--- a/R/wrapper_aln_and_analyse.R
+++ b/R/wrapper_aln_and_analyse.R
@@ -46,10 +46,13 @@ wrapper_aln_and_analyse <- function(seqname_x,
   
   genome_x_fa_subseq = paste0(sequence_name_output, '/fasta/', runname, '_x.fa')
   genome_y_fa_subseq = paste0(sequence_name_output, '/fasta/', runname, '_y.fa')
+  
   # Get coordinates in y
   coords_liftover = liftover_coarse(seqname_x, start_x, end_x, conversionpaf_link, lenfactor = factor)
+  
   # Get subseq-fastas in x and y
   extract_subseq_bedtools(genome_x_fa, seqname_x, start_x, end_x, genome_x_fa_subseq)
+  
   extract_subseq_bedtools(genome_y_fa, coords_liftover$lift_contig, coords_liftover$lift_start, coords_liftover$lift_end, genome_y_fa_subseq)
   
   # Run alignments. 
@@ -64,6 +67,27 @@ wrapper_aln_and_analyse <- function(seqname_x,
   plot_x_y = make_chunked_minimap_alnment(genome_x_fa_subseq, genome_y_fa_subseq, outpaf_link_x_y,
                                              chunklen = chunklen, minsdlen = 2000, saveplot=F,
                                              hllink = F, hltype = F)
+  
+  # Save orig alignments
+  ggplot2::ggsave(filename = outfile_plot_self_x,
+                  plot = plot_self_x, 
+                  width = 20, 
+                  height = 20, 
+                  units = 'cm',
+                  dpi = 300)
+  ggplot2::ggsave(filename = outfile_plot_self_y,
+                  plot = plot_self_y, 
+                  width = 20, 
+                  height = 20, 
+                  units = 'cm',
+                  dpi = 300)
+  ggplot2::ggsave(filename = outfile_plot_x_y,
+                  plot = plot_x_y, 
+                  width = 20, 
+                  height = 20, 
+                  units = 'cm',
+                  dpi = 300)
+  
   if (include_grid){
     # Make an xy grid
     grid_xy = wrapper_paf_to_bitlocus(outpaf_link_x_y, minlen = sd_minlen, compression = compression,
@@ -93,25 +117,7 @@ wrapper_aln_and_analyse <- function(seqname_x,
                 sep='\t'
     )
   }
-  # Save orig alignments
-  ggplot2::ggsave(filename = outfile_plot_self_x,
-                  plot = plot_self_x, 
-                  width = 20, 
-                  height = 20, 
-                  units = 'cm',
-                  dpi = 300)
-  ggplot2::ggsave(filename = outfile_plot_self_y,
-                  plot = plot_self_y, 
-                  width = 20, 
-                  height = 20, 
-                  units = 'cm',
-                  dpi = 300)
-  ggplot2::ggsave(filename = outfile_plot_x_y,
-                  plot = plot_x_y, 
-                  width = 20, 
-                  height = 20, 
-                  units = 'cm',
-                  dpi = 300)
+
 
   system(paste0('rm ', genome_y_fa_subseq))
 

commit 1986d4950fd2882ef9b9aa9ce2992e46c5603258
Author: whops <wolfram.hoeps@yahoo.de>
Date:   Mon Mar 7 21:19:54 2022 +0100

    Many more fixes.

diff --git a/R/wrapper_aln_and_analyse.R b/R/wrapper_aln_and_analyse.R
index 44a96e8..8f09390 100644
--- a/R/wrapper_aln_and_analyse.R
+++ b/R/wrapper_aln_and_analyse.R
@@ -71,7 +71,8 @@ wrapper_aln_and_analyse <- function(seqname_x,
     gridmatrix = gridlist_to_gridmatrix(grid_xy)
     
     res = explore_mutation_space(gridmatrix, depth = depth)
-    res = res[order(res$eval),]
+    res = res[!is.na(res$eval),]
+    res = res[order(res$eval, decreasing=T),]
     # Make a grid after applying the top res
     grid_modified = modify_gridmatrix(gridmatrix, res[1,])
     gm2 = reshape2::melt(grid_modified)

commit 6e52d266ef208381a82c2b3b7a15a52c32e42333
Author: whops <wolfram.hoeps@yahoo.de>
Date:   Mon Mar 7 15:57:58 2022 +0100

    Fixed eval function (non-zero cols no longer ignored + negative alignments flipped), fixed grid-making (bug in bounce_point), removed background grid from plots

diff --git a/R/wrapper_aln_and_analyse.R b/R/wrapper_aln_and_analyse.R
index 5ea6f28..44a96e8 100644
--- a/R/wrapper_aln_and_analyse.R
+++ b/R/wrapper_aln_and_analyse.R
@@ -13,6 +13,7 @@ wrapper_aln_and_analyse <- function(seqname_x,
                                     factor = 1,
                                     sd_minlen = 1000,
                                     compression = 1000,
+                                    depth = 2,
                                     runname = 'test',
                                     include_grid = T
                                     ){
@@ -63,14 +64,13 @@ wrapper_aln_and_analyse <- function(seqname_x,
   plot_x_y = make_chunked_minimap_alnment(genome_x_fa_subseq, genome_y_fa_subseq, outpaf_link_x_y,
                                              chunklen = chunklen, minsdlen = 2000, saveplot=F,
                                              hllink = F, hltype = F)
-  
-
   if (include_grid){
     # Make an xy grid
     grid_xy = wrapper_paf_to_bitlocus(outpaf_link_x_y, minlen = sd_minlen, compression = compression,
                                       gridplot_save = outfile_plot_grid, pregridplot_save = outfile_plot_pre_grid )
-    gridmatrix = gridlist_to_gridmatrix(grid_xy[[3]])
-    res = explore_mutation_space(gridmatrix, depth = 1)
+    gridmatrix = gridlist_to_gridmatrix(grid_xy)
+    
+    res = explore_mutation_space(gridmatrix, depth = depth)
     res = res[order(res$eval),]
     # Make a grid after applying the top res
     grid_modified = modify_gridmatrix(gridmatrix, res[1,])
@@ -112,7 +112,7 @@ wrapper_aln_and_analyse <- function(seqname_x,
                   units = 'cm',
                   dpi = 300)
 
-
+  system(paste0('rm ', genome_y_fa_subseq))
 
   
   

commit d04b4063fbcffc8edc6f0313559ac3b5aa8ca314
Author: whops <wolfram.hoeps@yahoo.de>
Date:   Tue Mar 1 19:09:22 2022 +0100

    Grid optional 2

diff --git a/R/wrapper_aln_and_analyse.R b/R/wrapper_aln_and_analyse.R
index b2697d0..5ea6f28 100644
--- a/R/wrapper_aln_and_analyse.R
+++ b/R/wrapper_aln_and_analyse.R
@@ -83,6 +83,14 @@ wrapper_aln_and_analyse <- function(seqname_x,
                     height = 10,
                     units = 'cm',
                     dpi = 300)
+    
+    # Save res table
+    write.table(res, file = res_table_xy,
+                col.names = T,
+                row.names = F,
+                quote = F,
+                sep='\t'
+    )
   }
   # Save orig alignments
   ggplot2::ggsave(filename = outfile_plot_self_x,
@@ -105,13 +113,7 @@ wrapper_aln_and_analyse <- function(seqname_x,
                   dpi = 300)
 
 
-  # Save res table
-  write.table(res, file = res_table_xy,
-              col.names = T,
-              row.names = F,
-              quote = F,
-              sep='\t'
-              )
+
   
   
 }

commit 68e47f38e36ecdd29fa889c1bf3cf1a352e6bf42
Author: whops <wolfram.hoeps@yahoo.de>
Date:   Tue Mar 1 19:00:34 2022 +0100

    Grid optional

diff --git a/R/wrapper_aln_and_analyse.R b/R/wrapper_aln_and_analyse.R
index 19510c9..b2697d0 100644
--- a/R/wrapper_aln_and_analyse.R
+++ b/R/wrapper_aln_and_analyse.R
@@ -13,7 +13,8 @@ wrapper_aln_and_analyse <- function(seqname_x,
                                     factor = 1,
                                     sd_minlen = 1000,
                                     compression = 1000,
-                                    runname = 'test'
+                                    runname = 'test',
+                                    include_grid = T
                                     ){
   
   sequence_name_output = paste(paste0('res/',seqname_x), format(start_x, scientific = F),  format(end_x, scientific = F), sep='-')
@@ -64,19 +65,25 @@ wrapper_aln_and_analyse <- function(seqname_x,
                                              hllink = F, hltype = F)
   
 
-  # Make an xy grid
-  grid_xy = wrapper_paf_to_bitlocus(outpaf_link_x_y, minlen = sd_minlen, compression = compression,
-                                    gridplot_save = outfile_plot_grid, pregridplot_save = outfile_plot_pre_grid )
-  gridmatrix = gridlist_to_gridmatrix(grid_xy[[3]])
-  res = explore_mutation_space(gridmatrix, depth = 1)
-  res = res[order(res$eval),]
-  # Make a grid after applying the top res
-  grid_modified = modify_gridmatrix(gridmatrix, res[1,])
-  gm2 = reshape2::melt(grid_modified)
-  colnames(gm2) = c('x','y','z')
-  grid_mut_plot = plot_matrix_ggplot(gm2[gm2$z != 0,])
-  
-
+  if (include_grid){
+    # Make an xy grid
+    grid_xy = wrapper_paf_to_bitlocus(outpaf_link_x_y, minlen = sd_minlen, compression = compression,
+                                      gridplot_save = outfile_plot_grid, pregridplot_save = outfile_plot_pre_grid )
+    gridmatrix = gridlist_to_gridmatrix(grid_xy[[3]])
+    res = explore_mutation_space(gridmatrix, depth = 1)
+    res = res[order(res$eval),]
+    # Make a grid after applying the top res
+    grid_modified = modify_gridmatrix(gridmatrix, res[1,])
+    gm2 = reshape2::melt(grid_modified)
+    colnames(gm2) = c('x','y','z')
+    grid_mut_plot = plot_matrix_ggplot(gm2[gm2$z != 0,])
+    ggplot2::ggsave(filename = outfile_plot_grid_mut,
+                    plot = grid_mut_plot,
+                    width = 10,
+                    height = 10,
+                    units = 'cm',
+                    dpi = 300)
+  }
   # Save orig alignments
   ggplot2::ggsave(filename = outfile_plot_self_x,
                   plot = plot_self_x, 
@@ -96,12 +103,7 @@ wrapper_aln_and_analyse <- function(seqname_x,
                   height = 20, 
                   units = 'cm',
                   dpi = 300)
-  ggplot2::ggsave(filename = outfile_plot_grid_mut,
-                  plot = grid_mut_plot,
-                  width = 10,
-                  height = 10,
-                  units = 'cm',
-                  dpi = 300)
+
 
   # Save res table
   write.table(res, file = res_table_xy,

commit cc569abfe79896d4d75289f03df1a8f41cdc3b3c
Author: whops <wolfram.hoeps@yahoo.de>
Date:   Tue Mar 1 18:41:56 2022 +0100

    Larger figures and differnt folder strucutre

diff --git a/R/wrapper_aln_and_analyse.R b/R/wrapper_aln_and_analyse.R
index 330599b..19510c9 100644
--- a/R/wrapper_aln_and_analyse.R
+++ b/R/wrapper_aln_and_analyse.R
@@ -24,6 +24,7 @@ wrapper_aln_and_analyse <- function(seqname_x,
   dir.create(paste0(sequence_name_output, '/self/paf'))
   dir.create(paste0(sequence_name_output, '/diff'))
   dir.create(paste0(sequence_name_output, '/diff/pdf'))
+  dir.create(paste0(sequence_name_output, '/diff/pdf/grid'))
   dir.create(paste0(sequence_name_output, '/diff/paf'))
   dir.create(paste0(sequence_name_output, '/fasta'))
   # Define output files
@@ -37,9 +38,9 @@ wrapper_aln_and_analyse <- function(seqname_x,
   outfile_plot_self_y = paste0(sequence_name_output, '/self/pdf/', runname, '_y.pdf')
   outfile_plot_x_y =    paste0(sequence_name_output, '/diff/pdf/', runname, '_x_y.pdf')
   
-  outfile_plot_pre_grid = paste0(sequence_name_output, '/diff/pdf/', runname, '_x_y_grid_pre.pdf')
-  outfile_plot_grid =   paste0(sequence_name_output, '/diff/pdf/', runname, '_x_y_grid.pdf')
-  outfile_plot_grid_mut =   paste0(sequence_name_output, '/diff/pdf/', runname, '_x_y_grid_mut.pdf')
+  outfile_plot_pre_grid = paste0(sequence_name_output, '/diff/pdf/grid/', runname, '_x_y_grid_pre.pdf')
+  outfile_plot_grid =   paste0(sequence_name_output, '/diff/pdf/grid/', runname, '_x_y_grid.pdf')
+  outfile_plot_grid_mut =   paste0(sequence_name_output, '/diff/pdf/grid/', runname, '_x_y_grid_mut.pdf')
   
   genome_x_fa_subseq = paste0(sequence_name_output, '/fasta/', runname, '_x.fa')
   genome_y_fa_subseq = paste0(sequence_name_output, '/fasta/', runname, '_y.fa')

commit 2e0c5752c9da7cd9b322aed97c133932c5ce3127
Author: whops <wolfram.hoeps@yahoo.de>
Date:   Tue Mar 1 18:37:34 2022 +0100

    Larger figures

diff --git a/R/wrapper_aln_and_analyse.R b/R/wrapper_aln_and_analyse.R
index c8a3e40..330599b 100644
--- a/R/wrapper_aln_and_analyse.R
+++ b/R/wrapper_aln_and_analyse.R
@@ -79,20 +79,20 @@ wrapper_aln_and_analyse <- function(seqname_x,
   # Save orig alignments
   ggplot2::ggsave(filename = outfile_plot_self_x,
                   plot = plot_self_x, 
-                  width = 10, 
-                  height = 10, 
+                  width = 20, 
+                  height = 20, 
                   units = 'cm',
                   dpi = 300)
   ggplot2::ggsave(filename = outfile_plot_self_y,
                   plot = plot_self_y, 
-                  width = 10, 
-                  height = 10, 
+                  width = 20, 
+                  height = 20, 
                   units = 'cm',
                   dpi = 300)
   ggplot2::ggsave(filename = outfile_plot_x_y,
                   plot = plot_x_y, 
-                  width = 10, 
-                  height = 10, 
+                  width = 20, 
+                  height = 20, 
                   units = 'cm',
                   dpi = 300)
   ggplot2::ggsave(filename = outfile_plot_grid_mut,

commit 032de0cf4dec5d23ed3e3e1b1d2f584193f71da3
Author: whops <wolfram.hoeps@yahoo.de>
Date:   Tue Mar 1 17:38:47 2022 +0100

    Saving everythign before introducing chaos.

diff --git a/R/wrapper_aln_and_analyse.R b/R/wrapper_aln_and_analyse.R
index 57df71a..c8a3e40 100644
--- a/R/wrapper_aln_and_analyse.R
+++ b/R/wrapper_aln_and_analyse.R
@@ -67,7 +67,7 @@ wrapper_aln_and_analyse <- function(seqname_x,
   grid_xy = wrapper_paf_to_bitlocus(outpaf_link_x_y, minlen = sd_minlen, compression = compression,
                                     gridplot_save = outfile_plot_grid, pregridplot_save = outfile_plot_pre_grid )
   gridmatrix = gridlist_to_gridmatrix(grid_xy[[3]])
-  res = explore_mutation_space(gridmatrix, depth = 2)
+  res = explore_mutation_space(gridmatrix, depth = 1)
   res = res[order(res$eval),]
   # Make a grid after applying the top res
   grid_modified = modify_gridmatrix(gridmatrix, res[1,])

commit 54ddf6da10f39ef2ce20d9f7d9fe51d36062cde0
Author: whops <wolfram.hoeps@yahoo.de>
Date:   Tue Mar 1 14:05:49 2022 +0100

    Added a wrapper for the wrapper. And fixed bugs.

diff --git a/R/wrapper_aln_and_analyse.R b/R/wrapper_aln_and_analyse.R
index 303ab34..57df71a 100644
--- a/R/wrapper_aln_and_analyse.R
+++ b/R/wrapper_aln_and_analyse.R
@@ -1,6 +1,7 @@
 
 
 #' wrapper_aln_and_analyse
+#' Description ... 
 #' @export
 wrapper_aln_and_analyse <- function(seqname_x,
                                     start_x,
@@ -15,7 +16,7 @@ wrapper_aln_and_analyse <- function(seqname_x,
                                     runname = 'test'
                                     ){
   
-  sequence_name_output = paste(paste0('res/',seqname_x), start_x, end_x, sep='-')
+  sequence_name_output = paste(paste0('res/',seqname_x), format(start_x, scientific = F),  format(end_x, scientific = F), sep='-')
   dir.create('res')
   dir.create(sequence_name_output)
   dir.create(paste0(sequence_name_output, '/self'))
@@ -25,7 +26,6 @@ wrapper_aln_and_analyse <- function(seqname_x,
   dir.create(paste0(sequence_name_output, '/diff/pdf'))
   dir.create(paste0(sequence_name_output, '/diff/paf'))
   dir.create(paste0(sequence_name_output, '/fasta'))
-  
   # Define output files
   outpaf_link_self_x =  paste0(sequence_name_output, '/self/paf/', runname, '_x.paf')
   outpaf_link_self_y =  paste0(sequence_name_output, '/self/paf/', runname, '_y.paf')
@@ -43,7 +43,6 @@ wrapper_aln_and_analyse <- function(seqname_x,
   
   genome_x_fa_subseq = paste0(sequence_name_output, '/fasta/', runname, '_x.fa')
   genome_y_fa_subseq = paste0(sequence_name_output, '/fasta/', runname, '_y.fa')
-
   # Get coordinates in y
   coords_liftover = liftover_coarse(seqname_x, start_x, end_x, conversionpaf_link, lenfactor = factor)
   # Get subseq-fastas in x and y
@@ -68,7 +67,6 @@ wrapper_aln_and_analyse <- function(seqname_x,
   grid_xy = wrapper_paf_to_bitlocus(outpaf_link_x_y, minlen = sd_minlen, compression = compression,
                                     gridplot_save = outfile_plot_grid, pregridplot_save = outfile_plot_pre_grid )
   gridmatrix = gridlist_to_gridmatrix(grid_xy[[3]])
-  
   res = explore_mutation_space(gridmatrix, depth = 2)
   res = res[order(res$eval),]
   # Make a grid after applying the top res

commit a1acd5f404bc54427ec4ab4a0b4863b42e338ae6
Author: whops <wolfram.hoeps@yahoo.de>
Date:   Mon Feb 28 16:46:39 2022 +0100

    Fixing bug with wrapper_aln_and_analyse more

diff --git a/R/wrapper_aln_and_analyse.R b/R/wrapper_aln_and_analyse.R
index 90a7618..303ab34 100644
--- a/R/wrapper_aln_and_analyse.R
+++ b/R/wrapper_aln_and_analyse.R
@@ -68,6 +68,7 @@ wrapper_aln_and_analyse <- function(seqname_x,
   grid_xy = wrapper_paf_to_bitlocus(outpaf_link_x_y, minlen = sd_minlen, compression = compression,
                                     gridplot_save = outfile_plot_grid, pregridplot_save = outfile_plot_pre_grid )
   gridmatrix = gridlist_to_gridmatrix(grid_xy[[3]])
+  
   res = explore_mutation_space(gridmatrix, depth = 2)
   res = res[order(res$eval),]
   # Make a grid after applying the top res

commit f9ae6b190856b3f5136ade03fad442376c19a489
Author: whops <wolfram.hoeps@yahoo.de>
Date:   Mon Feb 28 16:40:39 2022 +0100

    Fixing bug with wrapper_aln_and_analyse

diff --git a/R/wrapper_aln_and_analyse.R b/R/wrapper_aln_and_analyse.R
index f9a0600..90a7618 100644
--- a/R/wrapper_aln_and_analyse.R
+++ b/R/wrapper_aln_and_analyse.R
@@ -14,8 +14,8 @@ wrapper_aln_and_analyse <- function(seqname_x,
                                     compression = 1000,
                                     runname = 'test'
                                     ){
+  
   sequence_name_output = paste(paste0('res/',seqname_x), start_x, end_x, sep='-')
-
   dir.create('res')
   dir.create(sequence_name_output)
   dir.create(paste0(sequence_name_output, '/self'))
@@ -43,10 +43,9 @@ wrapper_aln_and_analyse <- function(seqname_x,
   
   genome_x_fa_subseq = paste0(sequence_name_output, '/fasta/', runname, '_x.fa')
   genome_y_fa_subseq = paste0(sequence_name_output, '/fasta/', runname, '_y.fa')
-  
+
   # Get coordinates in y
   coords_liftover = liftover_coarse(seqname_x, start_x, end_x, conversionpaf_link, lenfactor = factor)
-  
   # Get subseq-fastas in x and y
   extract_subseq_bedtools(genome_x_fa, seqname_x, start_x, end_x, genome_x_fa_subseq)
   extract_subseq_bedtools(genome_y_fa, coords_liftover$lift_contig, coords_liftover$lift_start, coords_liftover$lift_end, genome_y_fa_subseq)
@@ -69,12 +68,13 @@ wrapper_aln_and_analyse <- function(seqname_x,
   grid_xy = wrapper_paf_to_bitlocus(outpaf_link_x_y, minlen = sd_minlen, compression = compression,
                                     gridplot_save = outfile_plot_grid, pregridplot_save = outfile_plot_pre_grid )
   gridmatrix = gridlist_to_gridmatrix(grid_xy[[3]])
-
   res = explore_mutation_space(gridmatrix, depth = 2)
   res = res[order(res$eval),]
   # Make a grid after applying the top res
-  # grid_modified = modify_gridmatrix(gridmatrix, res[1,])
-  # grid_mut_plot = plot_matrix(log2(abs(grid_modified+1)))
+  grid_modified = modify_gridmatrix(gridmatrix, res[1,])
+  gm2 = reshape2::melt(grid_modified)
+  colnames(gm2) = c('x','y','z')
+  grid_mut_plot = plot_matrix_ggplot(gm2[gm2$z != 0,])
   
 
   # Save orig alignments
@@ -96,12 +96,12 @@ wrapper_aln_and_analyse <- function(seqname_x,
                   height = 10, 
                   units = 'cm',
                   dpi = 300)
-  # ggplot2::ggsave(filename = outfile_plot_grid_mut,
-  #                 plot = grid_mut_plot, 
-  #                 width = 10, 
-  #                 height = 10, 
-  #                 units = 'cm',
-  #                 dpi = 300)
+  ggplot2::ggsave(filename = outfile_plot_grid_mut,
+                  plot = grid_mut_plot,
+                  width = 10,
+                  height = 10,
+                  units = 'cm',
+                  dpi = 300)
 
   # Save res table
   write.table(res, file = res_table_xy,

commit fb83fcdecaec7bf69353201cb711e19d80ad4fa0
Author: whops <wolfram.hoeps@yahoo.de>
Date:   Mon Feb 28 15:41:03 2022 +0100

    Now with wrapper function.

diff --git a/R/wrapper_aln_and_analyse.R b/R/wrapper_aln_and_analyse.R
new file mode 100644
index 0000000..f9a0600
--- /dev/null
+++ b/R/wrapper_aln_and_analyse.R
@@ -0,0 +1,115 @@
+
+
+#' wrapper_aln_and_analyse
+#' @export
+wrapper_aln_and_analyse <- function(seqname_x,
+                                    start_x,
+                                    end_x,
+                                    genome_x_fa,
+                                    genome_y_fa,
+                                    conversionpaf_link,
+                                    chunklen = 1000,
+                                    factor = 1,
+                                    sd_minlen = 1000,
+                                    compression = 1000,
+                                    runname = 'test'
+                                    ){
+  sequence_name_output = paste(paste0('res/',seqname_x), start_x, end_x, sep='-')
+
+  dir.create('res')
+  dir.create(sequence_name_output)
+  dir.create(paste0(sequence_name_output, '/self'))
+  dir.create(paste0(sequence_name_output, '/self/pdf'))
+  dir.create(paste0(sequence_name_output, '/self/paf'))
+  dir.create(paste0(sequence_name_output, '/diff'))
+  dir.create(paste0(sequence_name_output, '/diff/pdf'))
+  dir.create(paste0(sequence_name_output, '/diff/paf'))
+  dir.create(paste0(sequence_name_output, '/fasta'))
+  
+  # Define output files
+  outpaf_link_self_x =  paste0(sequence_name_output, '/self/paf/', runname, '_x.paf')
+  outpaf_link_self_y =  paste0(sequence_name_output, '/self/paf/', runname, '_y.paf')
+  outpaf_link_x_y =     paste0(sequence_name_output, '/diff/paf/', runname, '_xy.paf')
+  
+  res_table_xy =        paste0(sequence_name_output, '/diff/', runname, '_res.tsv')
+  
+  outfile_plot_self_x = paste0(sequence_name_output, '/self/pdf/', runname, '_x.pdf')
+  outfile_plot_self_y = paste0(sequence_name_output, '/self/pdf/', runname, '_y.pdf')
+  outfile_plot_x_y =    paste0(sequence_name_output, '/diff/pdf/', runname, '_x_y.pdf')
+  
+  outfile_plot_pre_grid = paste0(sequence_name_output, '/diff/pdf/', runname, '_x_y_grid_pre.pdf')
+  outfile_plot_grid =   paste0(sequence_name_output, '/diff/pdf/', runname, '_x_y_grid.pdf')
+  outfile_plot_grid_mut =   paste0(sequence_name_output, '/diff/pdf/', runname, '_x_y_grid_mut.pdf')
+  
+  genome_x_fa_subseq = paste0(sequence_name_output, '/fasta/', runname, '_x.fa')
+  genome_y_fa_subseq = paste0(sequence_name_output, '/fasta/', runname, '_y.fa')
+  
+  # Get coordinates in y
+  coords_liftover = liftover_coarse(seqname_x, start_x, end_x, conversionpaf_link, lenfactor = factor)
+  
+  # Get subseq-fastas in x and y
+  extract_subseq_bedtools(genome_x_fa, seqname_x, start_x, end_x, genome_x_fa_subseq)
+  extract_subseq_bedtools(genome_y_fa, coords_liftover$lift_contig, coords_liftover$lift_start, coords_liftover$lift_end, genome_y_fa_subseq)
+  
+  # Run alignments. 
+  plot_self_x = make_chunked_minimap_alnment(genome_x_fa_subseq, genome_x_fa_subseq, outpaf_link_self_x,
+                                             chunklen = chunklen, minsdlen = 2000, saveplot=F,
+                                             hllink = F, hltype = F)
+  
+  plot_self_y = make_chunked_minimap_alnment(genome_y_fa_subseq, genome_y_fa_subseq, outpaf_link_self_y,
+                                             chunklen = chunklen, minsdlen = 2000, saveplot=F,
+                                             hllink = F, hltype = F)
+  
+  plot_x_y = make_chunked_minimap_alnment(genome_x_fa_subseq, genome_y_fa_subseq, outpaf_link_x_y,
+                                             chunklen = chunklen, minsdlen = 2000, saveplot=F,
+                                             hllink = F, hltype = F)
+  
+
+  # Make an xy grid
+  grid_xy = wrapper_paf_to_bitlocus(outpaf_link_x_y, minlen = sd_minlen, compression = compression,
+                                    gridplot_save = outfile_plot_grid, pregridplot_save = outfile_plot_pre_grid )
+  gridmatrix = gridlist_to_gridmatrix(grid_xy[[3]])
+
+  res = explore_mutation_space(gridmatrix, depth = 2)
+  res = res[order(res$eval),]
+  # Make a grid after applying the top res
+  # grid_modified = modify_gridmatrix(gridmatrix, res[1,])
+  # grid_mut_plot = plot_matrix(log2(abs(grid_modified+1)))
+  
+
+  # Save orig alignments
+  ggplot2::ggsave(filename = outfile_plot_self_x,
+                  plot = plot_self_x, 
+                  width = 10, 
+                  height = 10, 
+                  units = 'cm',
+                  dpi = 300)
+  ggplot2::ggsave(filename = outfile_plot_self_y,
+                  plot = plot_self_y, 
+                  width = 10, 
+                  height = 10, 
+                  units = 'cm',
+                  dpi = 300)
+  ggplot2::ggsave(filename = outfile_plot_x_y,
+                  plot = plot_x_y, 
+                  width = 10, 
+                  height = 10, 
+                  units = 'cm',
+                  dpi = 300)
+  # ggplot2::ggsave(filename = outfile_plot_grid_mut,
+  #                 plot = grid_mut_plot, 
+  #                 width = 10, 
+  #                 height = 10, 
+  #                 units = 'cm',
+  #                 dpi = 300)
+
+  # Save res table
+  write.table(res, file = res_table_xy,
+              col.names = T,
+              row.names = F,
+              quote = F,
+              sep='\t'
+              )
+  
+  
+}
